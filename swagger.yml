swagger: "2.0"
info:
  description: "This is an API for managing projects in a database."
  version: "0.1.0"
  title: "Sypian Server API"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "sypian"
basePath: "/"
tags:
- name: "category"
  description: "Manage your categories"
- name: "project"
  description: "Manage your projects"
- name: "relation"
  description: "Manage your relations"
schemes:
- "http"
paths:
  /category:
    post:
      tags:
      - "category"
      summary: "Add a new category to the graph"
      description: ""
      operationId: "addCategory"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Category object that needs to be added to the graph"
        required: true
        schema:
          $ref: "#/definitions/Category"
      responses:
        405:
          description: "Invalid input"
    put:
      tags:
      - "category"
      summary: "Update an existing category"
      description: ""
      operationId: "updateCategory"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Category object that needs to be updated in the graph"
        required: true
        schema:
          $ref: "#/definitions/Category"
      responses:
        400:
          description: "Invalid Category identifier supplied"
        404:
          description: "Category not found"
        405:
          description: "Validation exception"
  /category/{categoryId}:
    get:
      tags:
      - "category"
      summary: "Find category by ID"
      description: "Returns a single category"
      operationId: "getCategoryById"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "categoryId"
        in: "path"
        description: "ID of category to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Category"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Category not found"
    delete:
      tags:
      - "category"
      summary: "Deletes a category"
      description: ""
      operationId: "deleteCategory"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: false
        type: "string"
      - name: "categoryId"
        in: "path"
        description: "Category id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Category not found"
  /project/createWithArray:
    post:
      tags:
      - "project"
      summary: "Creates list of projects with given input array"
      description: ""
      operationId: "createProjectsWithArrayInput"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "List of project object"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/Project"
      responses:
        default:
          description: "successful operation"
  /project/createWithList:
    post:
      tags:
      - "project"
      summary: "Creates list of projects with given input array"
      description: ""
      operationId: "createProjectsWithListInput"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "List of project object"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/Project"
      responses:
        default:
          description: "successful operation"
  /project/{projectId}:
    get:
      tags:
      - "project"
      summary: "Get project by project name"
      description: ""
      operationId: "getProjectByName"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "projectId"
        in: "path"
        description: "ID of project to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Project"
        400:
          description: "Invalid projectname supplied"
        404:
          description: "Project not found"
    put:
      tags:
      - "project"
      summary: "Updated project"
      description: ""
      operationId: "updateProject"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "projectId"
        in: "path"
        description: "ID of project need to be updated"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Updated project object"
        required: true
        schema:
          $ref: "#/definitions/Project"
      responses:
        400:
          description: "Invalid project supplied"
        404:
          description: "Project not found"
    delete:
      tags:
      - "project"
      summary: "Delete project"
      description: ""
      operationId: "deleteProject"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "projectId"
        in: "path"
        description: "ID of project needs to be deleted"
        required: true
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "Invalid projectname supplied"
        404:
          description: "Project not found"
  /relation:
    post:
      tags:
      - "relation"
      summary: "Add a new relation to the graph"
      description: ""
      operationId: "addRelation"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Relation object that needs to be added to the graph"
        required: true
        schema:
          $ref: "#/definitions/Relation"
      responses:
        405:
          description: "Invalid input"
    put:
      tags:
      - "relation"
      summary: "Update an existing relation"
      description: ""
      operationId: "updateRelation"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Relation object that needs to be updated in the graph"
        required: true
        schema:
          $ref: "#/definitions/Relation"
      responses:
        400:
          description: "Invalid Relation identifier supplied"
        404:
          description: "Relation not found"
        405:
          description: "Validation exception"
  /relation/{relationId}:
    get:
      tags:
      - "relation"
      summary: "Find relation by ID"
      description: "Returns a single relation"
      operationId: "getRelationById"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "relationId"
        in: "path"
        description: "ID of relation to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Relation"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Relation not found"
    delete:
      tags:
      - "relation"
      summary: "Deletes a relation"
      description: ""
      operationId: "deleteRelation"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: false
        type: "string"
      - name: "relationId"
        in: "path"
        description: "Relation id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Relation not found"
definitions:
  Category:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      labels:
        type: "array"
        items: {
          "$ref": "#/definitions/Label"
        }
        format: "Label"
    xml:
      name: "Category"
  Project:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      labels:
        type: "array"
        items: {
          "$ref": "#/definitions/Label"
        }
    xml:
      name: "Project"
  Relation:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      labels:
        type: "array"
        items: {
          "$ref": "#/definitions/Label"
        }
    xml:
      name: "Tag"
  Label:
    type: "object"
    properties:
      key:
        type: "string"
      value:
        type: "string"
    xml:
      name: "Label"