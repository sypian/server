openapi: '3.0.0'
info:
  description: This is an API for managing projects in a database.
  version: 0.3.0
  title: Sypian Server API
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'

paths:
  /category:
    post:
      tags:
        - category
      summary: Add a new category to the graph
      description: ''
      operationId: createCategory
      requestBody:
          description: Category object that needs to be added to the graph
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                required:
                  - name
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#components/schemas/nodeid'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'

  /category/{categoryId}:
    get:
      tags:
        - category
      summary: Returns a category by its id
      description: Returns a single category
      operationId: getCategory
      parameters:
        - name: categoryId
          in: path
          required: true
          description: The node id of the category to get.
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/category'
        '404':
          description: Category not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'

    put:
      tags:
        - category
      summary: Update an existing category
      description: ''
      operationId: updateCategory
      parameters:
        - name: categoryId
          in: path
          required: true
          description: The node id of the category to update.
          schema:
            type: integer
            minimum: 1
      requestBody:
          description: Category object that needs to be added to the graph
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                required:
                  - name
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/category'
        '400':
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        '404':
          description: Category not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'

    delete:
      tags:
        - category
      summary: Deletes a category
      description: ''
      operationId: deleteCategory
      parameters:
        - name: categoryId
          in: path
          required: true
          description: The node id of the category to get.
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        '404':
          description: Category not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'

  /project:
    post:
      tags:
        - project
      summary: Add a new project to the graph
      description: ''
      operationId: createProject
      requestBody:
          description: Project object that needs to be added to the graph
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  categories:
                    type: array
                    items:
                      type: string
                required:
                  - name
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#components/schemas/nodeid'
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'

  /project/{projectId}:
    get:
      tags:
        - project
      summary: Get project by project node id.
      description: ''
      operationId: getProject
      parameters:
        - name: projectId
          in: path
          required: true
          description: The node id of the project to get.
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project'
        '404':
          description: Project not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'

    put:
      tags:
        - project
      summary: Update an existing project
      description: ''
      operationId: updateProject
      parameters:
        - name: projectId
          in: path
          required: true
          description: The node id of the project to get.
          schema:
            type: integer
            minimum: 1
      requestBody:
          description: Updated project object
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  categories:
                    type: array
                    items:
                      type: string
                required:
                  - name
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                required:
                  - id
                  - name
        '400':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'
        '404':
          description: Project/Category not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'

    delete:
      tags:
        - project
      summary: Delete project
      description: ''
      operationId: deleteProject
      parameters:
        - name: projectId
          in: path
          required: true
          description: The node id of the project to get.
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: successful operation
        '404':
          description: Project not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errors'

components:
  schemas:
    errors:
      type: array
      items:
        type: object
        properties:
          message:
            type: string
        required:
          - message
    nodeid:
      type: object
      properties:
        id:
          type: integer
      required:
        - id
    category:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
      required:
        - id
        - name
    project:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        categories:
          type: array
          items:
            $ref: '#/components/schemas/category'
      required:
        - id
        - name
        - categories
