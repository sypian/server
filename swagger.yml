swagger: '2.0'
info:
  description: This is an API for managing projects in a database.
  version: 0.2.0
  title: Sypian Server API
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: sypian
basePath: /
tags:
  - name: category
    description: Manage your categories
  - name: project
    description: Manage your projects
  - name: relation
    description: Manage your relations
schemes:
  - http
paths:
  /category:
    post:
      tags:
        - category
      summary: Add a new category to the graph
      description: ''
      operationId: addCategory
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: Category object that needs to be added to the graph
          required: true
          schema:
            $ref: '#/definitions/Category'
      responses:
        '200':
          description: successful operation
        '405':
          description: Invalid input
    put:
      tags:
        - category
      summary: Update an existing category
      description: ''
      operationId: updateCategory
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: Category object that needs to be updated in the graph
          required: true
          schema:
            $ref: '#/definitions/Category'
      responses:
        '200':
          description: successful operation
        '404':
          description: Category not found
        '405':
          description: Validation exception
  '/category/{categoryKey}':
    get:
      tags:
        - category
      summary: Find category by Key
      description: Returns a single category
      operationId: getCategoryByKey
      produces:
        - application/xml
        - application/json
      parameters:
        - name: categoryKey
          in: path
          description: Key of category to return
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Category'
        '400':
          description: Invalid Key supplied
        '404':
          description: Category not found
    delete:
      tags:
        - category
      summary: Deletes a category
      description: ''
      operationId: deleteCategory
      produces:
        - application/xml
        - application/json
      parameters:
        - name: categoryKey
          in: path
          description: Key of Category to delete
          required: true
          type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid Key supplied
        '404':
          description: Category not found
  /project:
    post:
      tags:
        - project
      summary: Add a new project to the graph
      description: ''
      operationId: addProject
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: Project object that needs to be added to the graph
          required: true
          schema:
            $ref: '#/definitions/Project'
      responses:
        '200':
          description: successful operation
        '405':
          description: Invalid input
    put:
      tags:
        - project
      summary: Update an existing project
      description: ''
      operationId: updateProject
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: Updated project object
          required: true
          schema:
            $ref: '#/definitions/Project'
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid project supplied
        '404':
          description: Project not found
  '/project/{projectKey}':
    get:
      tags:
        - project
      summary: Get project by project Key
      description: ''
      operationId: getProjectByKey
      produces:
        - application/xml
        - application/json
      parameters:
        - name: projectKey
          in: path
          description: Key of project to return
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Project'
        '400':
          description: Invalid projectname supplied
        '404':
          description: Project not found
    delete:
      tags:
        - project
      summary: Delete project
      description: ''
      operationId: deleteProject
      produces:
        - application/xml
        - application/json
      parameters:
        - name: projectKey
          in: path
          description: Key of project to delete
          required: true
          type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid projectname supplied
        '404':
          description: Project not found
  /relation:
    post:
      tags:
        - relation
      summary: Add a new relation to the graph
      description: ''
      operationId: addRelation
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: Relation object that needs to be added to the graph
          required: true
          schema:
            $ref: '#/definitions/Relation'
      responses:
        '200':
          description: successful operation
        '405':
          description: Invalid input
    put:
      tags:
        - relation
      summary: Update an existing relation
      description: ''
      operationId: updateRelation
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: Relation object that needs to be updated in the graph
          required: true
          schema:
            $ref: '#/definitions/Relation'
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid Relation identifier supplied
        '404':
          description: Relation not found
        '405':
          description: Validation exception
  '/relation?{query}':
    get:
      tags:
        - relation
      summary: Find relation by querying
      description: Returns a single relation
      operationId: getRelationByQuery
      produces:
        - application/xml
        - application/json
      parameters:
        - name: fromNodeKey
          in: query
          description: Key of Node where the relation starts
          required: true
          type: string
        - name: type
          in: query
          description: The type of the relation
          required: true
          type: string
        - name: toNodeKey
          in: query
          description: Key of Node where the relation ends
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Relation'
        '400':
          description: Invalid ID supplied
        '404':
          description: Relation not found
    delete:
      tags:
        - relation
      summary: Deletes a relation
      description: ''
      operationId: deleteRelation
      produces:
        - application/xml
        - application/json
      parameters:
        - name: fromNodeKey
          in: query
          description: Key of Node where the relation starts
          required: true
          type: string
        - name: type
          in: query
          description: The type of the relation
          required: true
          type: string
        - name: toNodeKey
          in: query
          description: Key of Node where the relation ends
          required: true
          type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: Relation not found
definitions:
  Node:
    type: object
    properties:
      key:
        type: string
      properties:
        type: array
        items:
          $ref: '#/definitions/Property'
        format: Label
    xml:
      name: Node
  Category:
    allOf:
      - $ref: '#/definitions/Node'
    type: object
    xml:
      name: Category
  Project:
    allOf:
      - $ref: '#/definitions/Node'
    type: object
    xml:
      name: Project
  Relation:
    type: object
    properties:
      type:
        type: string
      from:
        type: object
        $ref: '#/definitions/Node'
      to:
        type: object
        $ref: '#/definitions/Node'
      properties:
        type: array
        items:
          $ref: '#/definitions/Property'
        uniqueItems: true
    xml:
      name: Tag
  Property:
    type: object
    properties:
      key:
        type: string
      value:
        type: string
    xml:
      name: Label
